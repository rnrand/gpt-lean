ChatCompletionMessage(content='```coq\n(*\n  Chapter 3\n  Proofs\n*)\n\n(* Many mathematical proofs use a small range of standard outlines: direct\n   proof, examples/counter-examples, and proof by contrapositive. These notes\n   explain these basic proof methods, as well as how to use definitions of new\n   concepts in proofs. More advanced methods (e.g., proof by induction, proof\n   by contradiction) will be covered later.\n*)\n\nRequire Import ZArith.\nOpen Scope Z_scope.\n\n(* 3.1 Proving a universal statement *)\n\n(* We first define what we mean by "rational". *)\n\nDefinition rational (r: Z) : Prop :=\n  exists m n : Z, n <> 0 /\\ r = m / n.\n\n(* Now, let\'s consider how to prove a claim like\n   "For every rational number q, 2q is rational."\n*)\n\nTheorem double_of_rational_is_rational :\n  forall q, rational q -> rational (2*q).\nProof.\n  intros q [m [n [Hn0 Hq]]].\n  unfold rational.\n  exists (2*m), n.\n  split.\n  - exact Hn0.\n  - rewrite Hq. reflexivity.\nQed.\n\n(* 3.2 Another example of direct proof involving odd and even *)\n\n(* Definitions of "even" and "odd" *)\nDefinition even (n: Z) : Prop := exists m : Z, n = 2*m.\nDefinition odd (n: Z) : Prop := exists m : Z, n = 2*m + 1.\n\n(* Claim 1: For any integer k, if k is odd then k^2 is odd. *)\n\nTheorem odd_square_is_odd : \n  forall k: Z, odd k -> odd (k^2).\nProof.\n  intros k [j Hj].\n  unfold odd.\n  exists (2*j^2 + 2*j).\n  rewrite Hj.\n  ring.\nQed.\n\n(* 3.4 Proving existential statements *)\n\n(* Claim 2: There is an integer k such that k^2 = 0. *)\n\nTheorem zero_square :\n  exists k: Z, k^2 = 0.\nProof.\n  exists 0.\n  reflexivity.\nQed.\n\n(* 3.8 Direct proof: example with two variables *)\n\n(* Definition 4: An integer n is a perfect square if n = k^2 for some integer k. *)\nDefinition perfect_square (n: Z) : Prop :=\n  exists k : Z, n = k^2.\n\n(* Claim 7: For any integers m and n, if m and n are perfect squares, then so is mn. *)\n\nTheorem product_of_squares_is_square :\n  forall m n: Z, perfect_square m -> perfect_square n -> perfect_square (m*n).\nProof.\n  intros m n [k Hm] [j Hn].\n  exists (k*j).\n  rewrite Hm, Hn.\n  ring.\nQed.\n\n(* 3.9 Another example with two variables *)\n\n(* Claim 8: For all integers j and k, if j and k are odd, then jk is odd. *)\n\nTheorem product_of_odds_is_odd : \n  forall j k: Z, odd j -> odd k -> odd (j*k).\nProof.\n  intros j k [p Hp] [q Hq].\n  exists (2*p*q + p + q).\n  rewrite Hp, Hq.\n  ring.\nQed.\n\n(* 3.10 Proof by cases *)\n\n(* Claim 9: For all integers j and k, if j is even or k is even, then jk is even. *)\n\nTheorem even_product : \n  forall j k: Z, even j \\/ even k -> even (j*k).\nProof.\n  intros j k [Hj | Hk].\n  - destruct Hj as [m Hm]; exists (m*k); rewrite Hm; ring.\n  - destruct Hk as [n Hn]; exists (j*n); rewrite Hn; ring.\nQed.\n\n(* 3.12 Proof by contrapositive *)\n\n(* Claim 15: For any integers a and b, if a + b >= 15, then a >= 8 or b >= 8. *)\n\nTheorem sum_leading_to_min_value : \n  forall a b: Z, a + b >= 15 -> a >= 8 \\/ b >= 8.\nProof.\n  intros a b H.\n  apply Znot_lt_ge.\n  intros HNa.\n  apply Znot_lt_ge.\n  intros HNb.\n  apply Z.lt_gt in HNa. apply Z.lt_gt in HNb.\n  pose proof Z.add_lt_mono _ _ _ _ HNa HNb as HSum.\n  simpl in HSum.\n  contradiction (Z.lt_not_ge _ _ HSum H).\nQed.\n\n(* This document includes examples of direct proof, proof by cases, and proof by contrapositive\n   as highlighted in the provided text. *)\n```', role='assistant', function_call=None, tool_calls=None)
